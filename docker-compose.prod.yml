# PRODUCTION OVERRIDES

# The file that gets automatically merged into docker-compose.yml
# while running `docker-compose up -f docker-compose.yml -f docker-compose.prod.yml`.

version: "3.7"
services:
  app:
    env_file:
      - ./.env-prod
    build:
      context: .
      dockerfile: Dockerfile-app.prod
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hapiline.rule=Host(`bgord.tech`)"
      - "traefik.http.routers.hapiline.entrypoints=websecure"
      - "traefik.http.routers.hapiline.tls.certresolver=myresolver"
  db:
    env_file:
      - ./.env-prod
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
    volumes:
      - /usr/src/hapiline_backups/:/backups
  traefik:
    image: "traefik:v2.2"
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=gordonbartosz@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
